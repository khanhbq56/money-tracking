# ===== DJANGO CONFIGURATION =====
DEBUG=True
SECRET_KEY=your-super-secret-key-here-change-this-in-production

# ===== DATABASE CONFIGURATION =====
DATABASE_URL=postgresql://username:password@localhost:5432/expense_tracker

# For development, you can use SQLite instead:
# DATABASE_URL=sqlite:///db.sqlite3

# ===== AI INTEGRATION =====
GEMINI_API_KEY=your-google-gemini-api-key-here

# ===== REDIS CONFIGURATION (for Celery) =====
REDIS_URL=redis://localhost:6379/0

# ===== INTERNATIONALIZATION =====
LANGUAGE_CODE=vi
TIME_ZONE=Asia/Ho_Chi_Minh

# ===== ALLOWED HOSTS (for production) =====
ALLOWED_HOSTS=localhost,127.0.0.1,yourdomain.com

# ===== STATIC FILES (for production) =====
STATIC_URL=/static/
STATIC_ROOT=staticfiles/

# ===== SECURITY SETTINGS (for production) =====
SECURE_SSL_REDIRECT=False
SECURE_HSTS_SECONDS=0
SECURE_HSTS_INCLUDE_SUBDOMAINS=False
SECURE_HSTS_PRELOAD=False

# ===== EMAIL CONFIGURATION (optional) =====
EMAIL_BACKEND=django.core.mail.backends.console.EmailBackend
EMAIL_HOST=smtp.gmail.com
EMAIL_PORT=587
EMAIL_USE_TLS=True
EMAIL_HOST_USER=your-email@gmail.com
EMAIL_HOST_PASSWORD=your-email-password

# ===== CELERY CONFIGURATION =====
CELERY_BROKER_URL=redis://localhost:6379/0
CELERY_RESULT_BACKEND=redis://localhost:6379/0

# ===== API RATE LIMITING =====
GEMINI_REQUESTS_PER_MINUTE=15
GEMINI_REQUESTS_PER_DAY=1500

# ===== LOGGING LEVEL =====
LOG_LEVEL=INFO 

# ===== GOOGLE OAUTH 2.0 CONFIGURATION =====
# Get these from Google Cloud Console: https://console.cloud.google.com/
# Create OAuth 2.0 credentials for web application
GOOGLE_OAUTH2_CLIENT_ID=your-google-oauth-client-id.googleusercontent.com
GOOGLE_OAUTH2_CLIENT_SECRET=your-google-oauth-client-secret
GOOGLE_OAUTH2_PROJECT_ID=your-google-project-id

# OAuth redirect URI (must match Google Console settings)
GOOGLE_OAUTH2_REDIRECT_URI=http://localhost:8000/auth/google/callback/